buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle'

version = "${project.minecraft_version}-${project.mod_version}"
group = "lykrast.gunswithoutrosesadditions"
archivesBaseName = "gunswithoutrosesadditions"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: "${project.minecraft_version}"

    // Default run configurations.
    runs {
        client {
			// Thanks forge mixin troubleshooting on the Patchouli github! https://github.com/VazkiiMods/Patchouli
			property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
			
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'info'

            mods {
                gunswithoutrosesadditions {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'info'

            mods {
                gunswithoutrosesadditions {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'gunswithoutrosesadditions', '--all', '--output', file('src/generated/resources/')

            mods {
                gunswithoutrosesadditions {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
	maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        name = "botania"
        url = "https://maven.blamejared.com/"
    }
    maven {
        name = "curios"
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        name = "bumblezone"
        url = 'https://nexus.resourcefulbees.com/repository/maven-public/'
        content {
            includeGroup 'com.telepathicgrunt'
            includeGroup 'earth.terrarium.athena'
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"

	implementation fg.deobf("maven.modrinth:guns-without-roses:${project.gwr_version}")
	
    implementation fg.deobf("maven.modrinth:the-undergarden:${project.undergarden_version}")
	
    implementation fg.deobf("com.telepathicgrunt:Bumblezone:${project.bumblezone_version}")
    //Bumblezone dependency
    implementation fg.deobf("earth.terrarium.athena:athena-forge-${project.athena_version}")
	
    implementation fg.deobf("vazkii.botania:Botania:${project.botania_version}")
	// Botania dependencies
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${project.curios_version}")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${project.patchouli_version}")
	
    implementation fg.deobf("maven.modrinth:alexs-cloud-storage:${project.cloudstorage_version}")
	// Cloud Storage dependency
    runtimeOnly fg.deobf("maven.modrinth:citadel:${project.citadel_version}")
}

jar {
    manifest {
        attributes([
                "Specification-Title": "gunswithoutrosesadditions",
                "Specification-Vendor": "Lykrast",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"Lykrast",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}